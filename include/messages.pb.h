/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_PROTO_MESSAGES_PB_H_INCLUDED
#define PB_PROTO_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _response_Result {
    response_Result_OK = 0, /* send, ping or recevie ok */
    response_Result_SUBSCRIBED_OK = 1,
    response_Result_UNSUBSCRIBED_OK = 3,
    response_Result_ERROR = 5,
    response_Result_MQTT_ERROR = 7
} response_Result;

/* Struct definitions */
typedef struct _request_Ping {
    int32_t operation_type;
    int32_t num;
} request_Ping;

typedef struct _request_Send {
    int32_t operation_type;
    char queue[16];
    char payload[128];
    bool persist;
} request_Send;

typedef struct _request_Subscribe {
    int32_t operation_type;
    char queue[16];
} request_Subscribe;

typedef struct _request_Unsubscribe {
    int32_t operation_type;
    char queue[16];
} request_Unsubscribe;

typedef struct _request_Operation {
    pb_size_t which_op;
    union {
        request_Ping ping;
        request_Send send;
        request_Subscribe subscribe;
        request_Unsubscribe unsubscribe;
    } op;
} request_Operation;

typedef struct _request {
    pb_byte_t from_mac[6];
    pb_byte_t to_mac[6];
    char client_id[16];
    int32_t message_type;
    pb_size_t operations_count;
    request_Operation operations[5];
} request;

typedef struct _response_OpResponse {
    int32_t operation_type;
    response_Result result_code;
    char payload[128];
} response_OpResponse;

typedef struct _response {
    pb_byte_t from_mac[6];
    pb_byte_t to_mac[6];
    int32_t message_type;
    pb_size_t opResponses_count;
    response_OpResponse opResponses[5];
} response;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _response_Result_MIN response_Result_OK
#define _response_Result_MAX response_Result_MQTT_ERROR
#define _response_Result_ARRAYSIZE ((response_Result)(response_Result_MQTT_ERROR+1))








#define response_OpResponse_result_code_ENUMTYPE response_Result


/* Initializer values for message structs */
#define request_init_default                     {{0}, {0}, "", 0, 0, {request_Operation_init_default, request_Operation_init_default, request_Operation_init_default, request_Operation_init_default, request_Operation_init_default}}
#define request_Ping_init_default                {0, 0}
#define request_Send_init_default                {0, "", "", 0}
#define request_Subscribe_init_default           {0, ""}
#define request_Unsubscribe_init_default         {0, ""}
#define request_Operation_init_default           {0, {request_Ping_init_default}}
#define response_init_default                    {{0}, {0}, 0, 0, {response_OpResponse_init_default, response_OpResponse_init_default, response_OpResponse_init_default, response_OpResponse_init_default, response_OpResponse_init_default}}
#define response_OpResponse_init_default         {0, _response_Result_MIN, ""}
#define request_init_zero                        {{0}, {0}, "", 0, 0, {request_Operation_init_zero, request_Operation_init_zero, request_Operation_init_zero, request_Operation_init_zero, request_Operation_init_zero}}
#define request_Ping_init_zero                   {0, 0}
#define request_Send_init_zero                   {0, "", "", 0}
#define request_Subscribe_init_zero              {0, ""}
#define request_Unsubscribe_init_zero            {0, ""}
#define request_Operation_init_zero              {0, {request_Ping_init_zero}}
#define response_init_zero                       {{0}, {0}, 0, 0, {response_OpResponse_init_zero, response_OpResponse_init_zero, response_OpResponse_init_zero, response_OpResponse_init_zero, response_OpResponse_init_zero}}
#define response_OpResponse_init_zero            {0, _response_Result_MIN, ""}

/* Field tags (for use in manual encoding/decoding) */
#define request_Ping_operation_type_tag          1
#define request_Ping_num_tag                     2
#define request_Send_operation_type_tag          1
#define request_Send_queue_tag                   2
#define request_Send_payload_tag                 3
#define request_Send_persist_tag                 4
#define request_Subscribe_operation_type_tag     1
#define request_Subscribe_queue_tag              2
#define request_Unsubscribe_operation_type_tag   1
#define request_Unsubscribe_queue_tag            2
#define request_Operation_ping_tag               1
#define request_Operation_send_tag               2
#define request_Operation_subscribe_tag          3
#define request_Operation_unsubscribe_tag        4
#define request_from_mac_tag                     1
#define request_to_mac_tag                       2
#define request_client_id_tag                    3
#define request_message_type_tag                 4
#define request_operations_tag                   5
#define response_OpResponse_operation_type_tag   1
#define response_OpResponse_result_code_tag      2
#define response_OpResponse_payload_tag          3
#define response_from_mac_tag                    1
#define response_to_mac_tag                      2
#define response_message_type_tag                3
#define response_opResponses_tag                 4

/* Struct field encoding specification for nanopb */
#define request_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, from_mac,          1) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, to_mac,            2) \
X(a, STATIC,   SINGULAR, STRING,   client_id,         3) \
X(a, STATIC,   SINGULAR, INT32,    message_type,      4) \
X(a, STATIC,   REPEATED, MESSAGE,  operations,        5)
#define request_CALLBACK NULL
#define request_DEFAULT NULL
#define request_operations_MSGTYPE request_Operation

#define request_Ping_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    operation_type,    1) \
X(a, STATIC,   SINGULAR, INT32,    num,               2)
#define request_Ping_CALLBACK NULL
#define request_Ping_DEFAULT NULL

#define request_Send_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    operation_type,    1) \
X(a, STATIC,   SINGULAR, STRING,   queue,             2) \
X(a, STATIC,   SINGULAR, STRING,   payload,           3) \
X(a, STATIC,   SINGULAR, BOOL,     persist,           4)
#define request_Send_CALLBACK NULL
#define request_Send_DEFAULT NULL

#define request_Subscribe_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    operation_type,    1) \
X(a, STATIC,   SINGULAR, STRING,   queue,             2)
#define request_Subscribe_CALLBACK NULL
#define request_Subscribe_DEFAULT NULL

#define request_Unsubscribe_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    operation_type,    1) \
X(a, STATIC,   SINGULAR, STRING,   queue,             2)
#define request_Unsubscribe_CALLBACK NULL
#define request_Unsubscribe_DEFAULT NULL

#define request_Operation_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (op,ping,op.ping),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (op,send,op.send),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (op,subscribe,op.subscribe),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (op,unsubscribe,op.unsubscribe),   4)
#define request_Operation_CALLBACK NULL
#define request_Operation_DEFAULT NULL
#define request_Operation_op_ping_MSGTYPE request_Ping
#define request_Operation_op_send_MSGTYPE request_Send
#define request_Operation_op_subscribe_MSGTYPE request_Subscribe
#define request_Operation_op_unsubscribe_MSGTYPE request_Unsubscribe

#define response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, from_mac,          1) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, to_mac,            2) \
X(a, STATIC,   SINGULAR, INT32,    message_type,      3) \
X(a, STATIC,   REPEATED, MESSAGE,  opResponses,       4)
#define response_CALLBACK NULL
#define response_DEFAULT NULL
#define response_opResponses_MSGTYPE response_OpResponse

#define response_OpResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    operation_type,    1) \
X(a, STATIC,   SINGULAR, UENUM,    result_code,       2) \
X(a, STATIC,   SINGULAR, STRING,   payload,           3)
#define response_OpResponse_CALLBACK NULL
#define response_OpResponse_DEFAULT NULL

extern const pb_msgdesc_t request_msg;
extern const pb_msgdesc_t request_Ping_msg;
extern const pb_msgdesc_t request_Send_msg;
extern const pb_msgdesc_t request_Subscribe_msg;
extern const pb_msgdesc_t request_Unsubscribe_msg;
extern const pb_msgdesc_t request_Operation_msg;
extern const pb_msgdesc_t response_msg;
extern const pb_msgdesc_t response_OpResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define request_fields &request_msg
#define request_Ping_fields &request_Ping_msg
#define request_Send_fields &request_Send_msg
#define request_Subscribe_fields &request_Subscribe_msg
#define request_Unsubscribe_fields &request_Unsubscribe_msg
#define request_Operation_fields &request_Operation_msg
#define response_fields &response_msg
#define response_OpResponse_fields &response_OpResponse_msg

/* Maximum encoded size of messages (where known) */
#define request_Operation_size                   163
#define request_Ping_size                        22
#define request_Send_size                        160
#define request_Subscribe_size                   28
#define request_Unsubscribe_size                 28
#define request_size                             874
#define response_OpResponse_size                 143
#define response_size                            757

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
